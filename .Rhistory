install.packages("tinytex")
library(tinytex)
install_tinytex()
install.packages("knitr")
help(package=sweave)
install.packages(artsy)
install.packages("aRtsy")
help("aRtsy")
??aRtsy
help("aRtsy")
library(aRtsy)
help("aRtsy")
library(aRtsy)
<<CollatzPlot3, eval=FALSE, size="scriptsize", warning=FALSE, message=FALSE>>=
canvas_collatz(
colors,
background = "#dbdbdb",
n = 72,
angle.even = 0.0145,
angle.odd = -0.05,
side = FALSE
)
library(stringr)
library(jsonlite)
#######Step 2 Code#######
library(stringr)
library(jsonlite)
essentia_files <- list.files(path = "EssentiaOutput/")
json_files <- essentia_files[str_count(essentia_files, ".json")==1]
essentia_df <- data.frame(
artist = character(),
album = character(),
song = character(),
json_data = numeric(),
overall_loudness = numeric(),
spectral_energy = numeric(),
dissonance = numeric(),
pitch_salience = numeric(),
bpm = numeric(),
beats_loudness = numeric(),
danceability = numeric(),
tuning_frequency = numeric(),
stringsAsFactors = FALSE
)
for(i in 1:length(json_files)){
current.filename <- json_files[i]
file_parts <- str_split(current.filename, "-", simplify = TRUE)
artist <- file_parts[1]
album <- file_parts[2]
song <- str_replace(file_parts[3], ".json$", "")
json_data <- fromJSON(paste0("EssentiaOutput/", current.filename))
overall_loudness <- json_data$lowlevel$loudness_ebu128$integrated
spectral_energy <- json_data$lowlevel$spectral_energy
dissonance <- json_data$lowlevel$dissonance
pitch_salience <- json_data$lowlevel$pitch_salience
bpm <- json_data$rhythm$bpm
beats_loudness <- json_data$rhythm$beats_loudness
danceability <- json_data$rhythm$danceability
tuning_frequency <- json_data$tonal$tuning_frequency
new_row <- data.frame(  #singular row data frame which holds the essentia data from current.filename
artist = artist,
album = album,
song = song,
overall_loudness = overall_loudness,
spectral_energy = spectral_energy,
dissonance = dissonance,
pitch_salience = pitch_salience,
bpm = bpm,
beats_loudness = beats_loudness,
danceability = danceability,
tuning_frequency = tuning_frequency,
stringsAsFactors = FALSE
)
essentia_df <- rbind(essentia_df, new_row)
}
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
setwd("~/GitHub/lab-5-summarizing-and-graphing-data-in-r-chooey101")
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_data|>
group_by(artist) |>
summarize( Min = min(overall_loudness, na.rm = TRUE),
Q1 = quantile(overall_loudness, 0.25, na.rm = TRUE),
Q3 = quantile(overall_loudness, 0.75, na.rm = TRUE),
Max = max(overall_loudness, na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_data$overall_loudness < Min | allentown_data$overall_loudness > Max),
TRUE, FALSE),
unusual = if_else((allentown_data$overall_loudness < Lower_Fence | allentown_data$overall_loudness > Upper_Fence),
TRUE, FALSE)
description = case_when(
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_data|>
group_by(artist) |>
summarize( Min = min(overall_loudness, na.rm = TRUE),
Q1 = quantile(overall_loudness, 0.25, na.rm = TRUE),
Q3 = quantile(overall_loudness, 0.75, na.rm = TRUE),
Max = max(overall_loudness, na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_data$overall_loudness < Min | allentown_data$overall_loudness > Max),
TRUE, FALSE),
unusual = if_else((allentown_data$overall_loudness < Lower_Fence | allentown_data$overall_loudness > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){
song_data|>
group_by(artist) |>
values <- get(feature) |>
summarize( Min = min(values, na.rm = TRUE),
Q1 = quantile(values, 0.25, na.rm = TRUE),
Q3 = quantile(values, 0.75, na.rm = TRUE),
Max = max(values, na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_data$overall_loudness < Min | allentown_data$overall_loudness > Max),
TRUE, FALSE),
unusual = if_else((allentown_data$overall_loudness < Lower_Fence | allentown_data$overall_loudness > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
}
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){
song_data|>
group_by(artist) |>
values <- get(feature) |>
summarize( Min = min(values, na.rm = TRUE),
Q1 = quantile(values, 0.25, na.rm = TRUE),
Q3 = quantile(values, 0.75, na.rm = TRUE),
Max = max(values, na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_data$overall_loudness < Min | allentown_data$overall_loudness > Max),
TRUE, FALSE),
unusual = if_else((allentown_data$overall_loudness < Lower_Fence | allentown_data$overall_loudness > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
}
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){
song_data|>
group_by(artist) |>
values <- get(feature)
summarize( Min = min(values, na.rm = TRUE),
Q1 = quantile(values, 0.25, na.rm = TRUE),
Q3 = quantile(values, 0.75, na.rm = TRUE),
Max = max(values, na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_data$overall_loudness < Min | allentown_data$overall_loudness > Max),
TRUE, FALSE),
unusual = if_else((allentown_data$overall_loudness < Lower_Fence | allentown_data$overall_loudness > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
}
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){
values <- get(feature)
song_data|>
group_by(artist) |>
values <- get(feature)
summarize( Min = min(values, na.rm = TRUE),
Q1 = quantile(values, 0.25, na.rm = TRUE),
Q3 = quantile(values, 0.75, na.rm = TRUE),
Max = max(values, na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_data$overall_loudness < Min | allentown_data$overall_loudness > Max),
TRUE, FALSE),
unusual = if_else((allentown_data$overall_loudness < Lower_Fence | allentown_data$overall_loudness > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
}
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){
values <- get(feature)
song_data|>
group_by(artist) |>
summarize( Min = min(values, na.rm = TRUE),
Q1 = quantile(values, 0.25, na.rm = TRUE),
Q3 = quantile(values, 0.75, na.rm = TRUE),
Max = max(values, na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_data$overall_loudness < Min | allentown_data$overall_loudness > Max),
TRUE, FALSE),
unusual = if_else((allentown_data$overall_loudness < Lower_Fence | allentown_data$overall_loudness > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
}
song_stats("Clout")
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){
values <- get(feature)
song_data|>
group_by(artist) |>
summarize( Min = min(values, na.rm = TRUE),
Q1 = quantile(values, 0.25, na.rm = TRUE),
Q3 = quantile(values, 0.75, na.rm = TRUE),
Max = max(values, na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_data$overall_loudness < Min | allentown_data$overall_loudness > Max),
TRUE, FALSE),
unusual = if_else((allentown_data$overall_loudness < Lower_Fence | allentown_data$overall_loudness > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
}
song_stats("spectral_energy")
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){
song_data|>
group_by(artist)|>
summarize( Min = min(get(feature), na.rm = TRUE),
Q1 = quantile(get(feature), 0.25, na.rm = TRUE),
Q3 = quantile(get(feature), 0.75, na.rm = TRUE),
Max = max(get(feature), na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_data$overall_loudness < Min | allentown_data$overall_loudness > Max),
TRUE, FALSE),
unusual = if_else((allentown_data$overall_loudness < Lower_Fence | allentown_data$overall_loudness > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
}
song_stats("spectral_energy")
