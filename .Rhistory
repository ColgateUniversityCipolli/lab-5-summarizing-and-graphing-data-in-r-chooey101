danceability = numeric(),
tuning_frequency = numeric(),
stringsAsFactors = FALSE
)
for(i in 1:length(json_files)){
current.filename <- json_files[i]
file_parts <- str_split(current.filename, "-", simplify = TRUE)
artist <- file_parts[1]
album <- file_parts[2]
song <- str_replace(file_parts[3], ".json$", "")
json_data <- fromJSON(paste0("EssentiaOutput/", current.filename))
overall_loudness <- json_data$lowlevel$loudness_ebu128$integrated
spectral_energy <- json_data$lowlevel$spectral_energy
dissonance <- json_data$lowlevel$dissonance
pitch_salience <- json_data$lowlevel$pitch_salience
bpm <- json_data$rhythm$bpm
beats_loudness <- json_data$rhythm$beats_loudness
danceability <- json_data$rhythm$danceability
tuning_frequency <- json_data$tonal$tuning_frequency
new_row <- data.frame(  #singular row data frame which holds the essentia data from current.filename
artist = artist,
album = album,
song = song,
overall_loudness = overall_loudness,
spectral_energy = spectral_energy,
dissonance = dissonance,
pitch_salience = pitch_salience,
bpm = bpm,
beats_loudness = beats_loudness,
danceability = danceability,
tuning_frequency = tuning_frequency,
stringsAsFactors = FALSE
)
essentia_df <- rbind(essentia_df, new_row)
}
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
setwd("~/GitHub/lab-5-summarizing-and-graphing-data-in-r-chooey101")
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_data|>
group_by(artist) |>
summarize( Min = min(overall_loudness, na.rm = TRUE),
Q1 = quantile(overall_loudness, 0.25, na.rm = TRUE),
Q3 = quantile(overall_loudness, 0.75, na.rm = TRUE),
Max = max(overall_loudness, na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_data$overall_loudness < Min | allentown_data$overall_loudness > Max),
TRUE, FALSE),
unusual = if_else((allentown_data$overall_loudness < Lower_Fence | allentown_data$overall_loudness > Upper_Fence),
TRUE, FALSE)
description = case_when(
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_data|>
group_by(artist) |>
summarize( Min = min(overall_loudness, na.rm = TRUE),
Q1 = quantile(overall_loudness, 0.25, na.rm = TRUE),
Q3 = quantile(overall_loudness, 0.75, na.rm = TRUE),
Max = max(overall_loudness, na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_data$overall_loudness < Min | allentown_data$overall_loudness > Max),
TRUE, FALSE),
unusual = if_else((allentown_data$overall_loudness < Lower_Fence | allentown_data$overall_loudness > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){
song_data|>
group_by(artist) |>
values <- get(feature) |>
summarize( Min = min(values, na.rm = TRUE),
Q1 = quantile(values, 0.25, na.rm = TRUE),
Q3 = quantile(values, 0.75, na.rm = TRUE),
Max = max(values, na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_data$overall_loudness < Min | allentown_data$overall_loudness > Max),
TRUE, FALSE),
unusual = if_else((allentown_data$overall_loudness < Lower_Fence | allentown_data$overall_loudness > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
}
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){
song_data|>
group_by(artist) |>
values <- get(feature) |>
summarize( Min = min(values, na.rm = TRUE),
Q1 = quantile(values, 0.25, na.rm = TRUE),
Q3 = quantile(values, 0.75, na.rm = TRUE),
Max = max(values, na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_data$overall_loudness < Min | allentown_data$overall_loudness > Max),
TRUE, FALSE),
unusual = if_else((allentown_data$overall_loudness < Lower_Fence | allentown_data$overall_loudness > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
}
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){
song_data|>
group_by(artist) |>
values <- get(feature)
summarize( Min = min(values, na.rm = TRUE),
Q1 = quantile(values, 0.25, na.rm = TRUE),
Q3 = quantile(values, 0.75, na.rm = TRUE),
Max = max(values, na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_data$overall_loudness < Min | allentown_data$overall_loudness > Max),
TRUE, FALSE),
unusual = if_else((allentown_data$overall_loudness < Lower_Fence | allentown_data$overall_loudness > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
}
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){
values <- get(feature)
song_data|>
group_by(artist) |>
values <- get(feature)
summarize( Min = min(values, na.rm = TRUE),
Q1 = quantile(values, 0.25, na.rm = TRUE),
Q3 = quantile(values, 0.75, na.rm = TRUE),
Max = max(values, na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_data$overall_loudness < Min | allentown_data$overall_loudness > Max),
TRUE, FALSE),
unusual = if_else((allentown_data$overall_loudness < Lower_Fence | allentown_data$overall_loudness > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
}
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){
values <- get(feature)
song_data|>
group_by(artist) |>
summarize( Min = min(values, na.rm = TRUE),
Q1 = quantile(values, 0.25, na.rm = TRUE),
Q3 = quantile(values, 0.75, na.rm = TRUE),
Max = max(values, na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_data$overall_loudness < Min | allentown_data$overall_loudness > Max),
TRUE, FALSE),
unusual = if_else((allentown_data$overall_loudness < Lower_Fence | allentown_data$overall_loudness > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
}
song_stats("Clout")
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){
values <- get(feature)
song_data|>
group_by(artist) |>
summarize( Min = min(values, na.rm = TRUE),
Q1 = quantile(values, 0.25, na.rm = TRUE),
Q3 = quantile(values, 0.75, na.rm = TRUE),
Max = max(values, na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_data$overall_loudness < Min | allentown_data$overall_loudness > Max),
TRUE, FALSE),
unusual = if_else((allentown_data$overall_loudness < Lower_Fence | allentown_data$overall_loudness > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
}
song_stats("spectral_energy")
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){
song_data|>
group_by(artist)|>
summarize( Min = min(get(feature), na.rm = TRUE),
Q1 = quantile(get(feature), 0.25, na.rm = TRUE),
Q3 = quantile(get(feature), 0.75, na.rm = TRUE),
Max = max(get(feature), na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_data$overall_loudness < Min | allentown_data$overall_loudness > Max),
TRUE, FALSE),
unusual = if_else((allentown_data$overall_loudness < Lower_Fence | allentown_data$overall_loudness > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
}
song_stats("spectral_energy")
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){
song_data|>
group_by(artist)|>
summarize( Min = min(get(feature), na.rm = TRUE),
Q1 = quantile(get(feature), 0.25, na.rm = TRUE),
Q3 = quantile(get(feature), 0.75, na.rm = TRUE),
Max = max(get(feature), na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_data$overall_loudness < Min | allentown_data$overall_loudness > Max),
TRUE, FALSE),
unusual = if_else((allentown_data$overall_loudness < Lower_Fence | allentown_data$overall_loudness > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
}
song_stats("spectral_energy")
song_data
View(song_data)
song_stats("pitch_salience")
song_stats("danceability")
song_stats("dissonance")
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){
allentown_value <- allentown_data[[feature]]
song_data|>
group_by(artist)|>
summarize( Min = min(get(feature), na.rm = TRUE),
Q1 = quantile(get(feature), 0.25, na.rm = TRUE),
Q3 = quantile(get(feature), 0.75, na.rm = TRUE),
Max = max(get(feature), na.rm = TRUE)) |>
mutate(
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_value < Min | allentown_value > Max),
TRUE, FALSE),
unusual = if_else((allentown_value < Lower_Fence | allentown_value > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
}
song_stats("spectral_energy")
song_stats("danceability")
song_stats("pitch_salience")
song_stats("acousticness")
song_stats("acoustic")
song_stats("spectral_energy")
song_stats("spectral_skewness")
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){
allentown_value <- allentown_data[[feature]]
song_data|>
group_by(artist)|>
summarize( Min = min(get(feature), na.rm = TRUE),
Q1 = quantile(get(feature), 0.25, na.rm = TRUE),
Q3 = quantile(get(feature), 0.75, na.rm = TRUE),
Max = max(get(feature), na.rm = TRUE)) |>
mutate(
feature = feature,
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_value < Min | allentown_value > Max),
TRUE, FALSE),
unusual = if_else((allentown_value < Lower_Fence | allentown_value > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
)
}
song_stats("danceability") #The Front Bottoms are out of range here
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){
allentown_value <- allentown_data[[feature]]
song_data|>
group_by(artist)|>
summarize( Min = min(get(feature), na.rm = TRUE),
Q1 = quantile(get(feature), 0.25, na.rm = TRUE),
Q3 = quantile(get(feature), 0.75, na.rm = TRUE),
Max = max(get(feature), na.rm = TRUE)) |>
mutate(
feature = feature,
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_value < Min | allentown_value > Max),
TRUE, FALSE),
unusual = if_else((allentown_value < Lower_Fence | allentown_value > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
) |>
ungroup()
}
numerical_features <- song_data |>
select(where(is.numeric)) |>
names() #makes sure this is the character value of each feature
all_features_stats <- tibble()
for (feature in numerical_features) {
all_features_stats <- bind_rows(all_features_stats, song_stats(feature))
}
dim(all_features_stats)
View(all_features_stats)
setwd("~/GitHub/lab-5-summarizing-and-graphing-data-in-r-chooey101")
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){
allentown_value <- allentown_data[[feature]]
song_data|>
group_by(artist)|>
summarize( Min = min(get(feature), na.rm = TRUE),
Q1 = quantile(get(feature), 0.25, na.rm = TRUE),
Q3 = quantile(get(feature), 0.75, na.rm = TRUE),
Max = max(get(feature), na.rm = TRUE)) |>
mutate(
feature = feature,
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_value < Min | allentown_value > Max),
TRUE, FALSE),
unusual = if_else((allentown_value < Lower_Fence | allentown_value > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
) |>
ungroup()
}
numerical_features <- song_data |>
select(where(is.numeric)) |> #Pulls only numerical features
names() #makes sure this is the character value of each feature
all_features_stats <- tibble()
for (feature in numerical_features) {
all_features_stats <- bind_rows(all_features_stats, song_stats(feature)) #Statistics of all numerical features
}
View(all_features_stats)
library(tidyverse)
allentown_data <- read_csv("data/essentia.data.allentown.csv")
song_data <- read_csv("data/essentia.data.csv")
song_stats <- function(feature){ #Takes an essentia feature as input
allentown_value <- allentown_data[[feature]]
song_data|>
group_by(artist)|>
summarize( Min = min(get(feature), na.rm = TRUE),
Q1 = quantile(get(feature), 0.25, na.rm = TRUE),
Q3 = quantile(get(feature), 0.75, na.rm = TRUE),
Max = max(get(feature), na.rm = TRUE)) |>
mutate(
feature = feature,
IQR = Q3 - Q1,
Lower_Fence = Q1 - 1.5 * IQR,
Upper_Fence = Q3 + 1.5 * IQR
) |>
mutate(
out.of.range = if_else((allentown_value < Min | allentown_value > Max),
TRUE, FALSE),
unusual = if_else((allentown_value < Lower_Fence | allentown_value > Upper_Fence),
TRUE, FALSE),
description = case_when(
out.of.range ~ "Out of Range",
unusual ~ "Outlying",
TRUE ~ "Within Range"
)
) |>
ungroup()
}
numerical_features <- song_data |>
select(where(is.numeric)) |> #Pulls only numerical features
names() #makes sure this is the character value of each feature
all_features_stats <- tibble()
for (feature in numerical_features) {
all_features_stats <- bind_rows(all_features_stats, song_stats(feature)) #Statistics of all numerical features
}
summarized_features <- all_features_stats |>
filter(str_detect(feature, "spectral_skewness|
spectral_rolloff|
spectral_energyband_middle_high|
spectral_complexity|
spectral_centroid|
melbands_spread|
melbands_flatness_db|
erbbands_skewness|
erbbands_flatness_db|
dissonance"))
View(summarized_features)
summarized_features <- all_features_stats |>
filter(str_detect(feature, "spectral_skewness|spectral_rolloff|spectral_energyband_middle_high|spectral_complexity|spectral_centroid|melbands_spread|melbands_flatness_db|erbbands_skewness|erbbands_flatness_db|dissonance"))
View(summarized_features)
write_csv(summarized_features)
write_csv(summarized_features, "summarized_features.csv")
